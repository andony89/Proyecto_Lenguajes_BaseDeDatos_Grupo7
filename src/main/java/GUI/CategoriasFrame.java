/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BD.ConexionOracle;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import oracle.jdbc.OracleTypes;
import oracle.jdbc.OracleCallableStatement;
import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author andon
 */
public class CategoriasFrame extends javax.swing.JFrame {

    /**
     * Creates new form CategoriasFrame
     *
     */
    private DefaultTableModel modeloTabla;

    public CategoriasFrame() {
        initComponents();
        // Configurar el comportamiento de cierre para que solo cierre esta ventana
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        modeloTabla = (DefaultTableModel) TablaCategorias.getModel();
        actualizarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAgregar1 = new javax.swing.JButton();
        btnBuscar1 = new javax.swing.JButton();
        btnEliminar1 = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        txfCategoriaID1 = new javax.swing.JTextField();
        txfNombre1 = new javax.swing.JTextField();
        txfDescripcion1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaCategorias = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnObtenerCategorias = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 153));

        btnAgregar1.setText("Agregar");
        btnAgregar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregar1ActionPerformed(evt);
            }
        });

        btnBuscar1.setText("Buscar");
        btnBuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar1ActionPerformed(evt);
            }
        });

        btnEliminar1.setText("Eliminar");
        btnEliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminar1ActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        txfCategoriaID1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txfCategoriaID1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txfCategoriaID1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfCategoriaID1ActionPerformed(evt);
            }
        });

        txfNombre1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txfNombre1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfNombre1ActionPerformed(evt);
            }
        });

        txfDescripcion1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txfDescripcion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfDescripcion1ActionPerformed(evt);
            }
        });

        TablaCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "CategoriaID", "Nombre", "Descripcion"
            }
        ));
        jScrollPane1.setViewportView(TablaCategorias);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tabla Categorias");
        jLabel1.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel2.setText("Categoria ID");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Nombre");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel4.setText("Descripcion");

        btnObtenerCategorias.setText("ObtenerCategorias");
        btnObtenerCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObtenerCategoriasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txfDescripcion1))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txfCategoriaID1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txfNombre1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAgregar1)
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscar1)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminar1)
                                .addGap(18, 18, 18)
                                .addComponent(btnEditar)
                                .addGap(18, 18, 18)
                                .addComponent(btnObtenerCategorias)))
                        .addGap(0, 161, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txfNombre1)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txfCategoriaID1)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txfDescripcion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar1)
                    .addComponent(btnEliminar1)
                    .addComponent(btnEditar)
                    .addComponent(btnAgregar1)
                    .addComponent(btnObtenerCategorias))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregar1ActionPerformed
        String nombre = txfNombre1.getText();
        String descripcion = txfDescripcion1.getText();

        if (nombre.isEmpty() || descripcion.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try (Connection conn = ConexionOracle.getConnection(); CallableStatement stmt = conn.prepareCall("{call crear_categoria(?, ?)}")) {
            stmt.setString(1, nombre);
            stmt.setString(2, descripcion);
            stmt.execute();
            JOptionPane.showMessageDialog(this, "Categoría agregada exitosamente.");
            actualizarTabla();
            limpiarCampos();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al agregar la categoría: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregar1ActionPerformed

    private void txfDescripcion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfDescripcion1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfDescripcion1ActionPerformed

    private void txfNombre1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfNombre1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfNombre1ActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        String categoriaIDText = txfCategoriaID1.getText();
        String nombre = txfNombre1.getText();
        String descripcion = txfDescripcion1.getText();

        if (categoriaIDText.isEmpty() || nombre.isEmpty() || descripcion.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try (Connection conn = ConexionOracle.getConnection(); CallableStatement stmt = conn.prepareCall("{call actualizar_categoria(?, ?, ?)}")) {
            int categoriaID = Integer.parseInt(categoriaIDText);
            stmt.setInt(1, categoriaID);
            stmt.setString(2, nombre);
            stmt.setString(3, descripcion);
            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Categoría actualizada exitosamente.");
                actualizarTabla();
                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(this, "Categoría no encontrada.", "Información", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al actualizar la categoría: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnBuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar1ActionPerformed
        String categoriaIDText = txfCategoriaID1.getText();

        if (categoriaIDText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese el ID de la categoría.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try (Connection conn = ConexionOracle.getConnection(); CallableStatement stmt = conn.prepareCall("{call pkg_categorias.LeerCategoria(?, ?, ?)}")) {

            int categoriaID = Integer.parseInt(categoriaIDText);
            stmt.setInt(1, categoriaID);

            // Registrar los parámetros de salida
            stmt.registerOutParameter(2, OracleTypes.VARCHAR);  // p_Nombre
            stmt.registerOutParameter(3, OracleTypes.VARCHAR);  // p_Descripcion

            stmt.execute();

            // Limpiar la tabla antes de mostrar resultados
            modeloTabla.setRowCount(0);
            // Limpiar los campos de texto
            txfNombre1.setText("");
            txfDescripcion1.setText("");

            // Obtener los valores de los parámetros de salida
            String nombre = stmt.getString(2);
            String descripcion = stmt.getString(3);

            if (nombre != null) {
                txfNombre1.setText(nombre);
                txfDescripcion1.setText(descripcion);
                modeloTabla.addRow(new Object[]{
                    categoriaID,
                    nombre,
                    descripcion
                });
            } else {
                JOptionPane.showMessageDialog(this, "Categoría no encontrada.", "Información", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al buscar la categoría: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscar1ActionPerformed

    private void btnEliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminar1ActionPerformed
        String categoriaIDText = txfCategoriaID1.getText();

        if (categoriaIDText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese el ID de la categoría.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try (Connection conn = ConexionOracle.getConnection(); CallableStatement stmt = conn.prepareCall("{call eliminar_categoria(?)}")) {
            int categoriaID = Integer.parseInt(categoriaIDText);
            stmt.setInt(1, categoriaID);
            stmt.execute();

            JOptionPane.showMessageDialog(this, "Categoría eliminada exitosamente.");
            txfNombre1.setText("");
            txfDescripcion1.setText("");
            actualizarTabla();
        } catch (SQLException e) {
            if (e.getErrorCode() == 2292) {
                JOptionPane.showMessageDialog(this, "No se puede eliminar la categoría porque tiene registros asociados.", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error al eliminar la categoría: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnEliminar1ActionPerformed

    private void txfCategoriaID1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfCategoriaID1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfCategoriaID1ActionPerformed

    private void btnObtenerCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObtenerCategoriasActionPerformed
        Connection conn = null;
        CallableStatement callableStatement = null;
        ResultSet resultSet = null;

        try {
            // Obtener la conexión a la base de datos
            conn = ConexionOracle.getConnection();
            callableStatement = conn.prepareCall("{call ObtenerCategorias(?)}");
            callableStatement.registerOutParameter(1, OracleTypes.CURSOR);
            callableStatement.execute();
            resultSet = (ResultSet) callableStatement.getObject(1);

            // Limpiar el modelo de la tabla antes de llenar con nuevos datos
            modeloTabla.setRowCount(0);  // Limpia la tabla

            // Procesar el ResultSet y llenar la tabla
            while (resultSet.next()) {
                int categoriaId = resultSet.getInt("CategoriaID");
                String nombre = resultSet.getString("Nombre");
                String descripcion = resultSet.getString("Descripcion");

                // Añadir una fila a la tabla con los datos obtenidos
                modeloTabla.addRow(new Object[]{categoriaId, nombre, descripcion});
            }

            // Informar al usuario que los datos se han obtenido exitosamente
            JOptionPane.showMessageDialog(this, "Datos obtenidos exitosamente.");

        } catch (SQLException e) {
            // Manejo de errores
            JOptionPane.showMessageDialog(this, "Error al obtener los datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            // Cerrar los recursos
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
                if (callableStatement != null) {
                    callableStatement.close();
                }
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error al cerrar los recursos: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnObtenerCategoriasActionPerformed

    /**
     * @param args the command line arguments
     */
    private void limpiarCampos() {
        txfCategoriaID1.setText("");
        txfNombre1.setText("");
        txfDescripcion1.setText("");
    }

    private void actualizarTabla() {
        CallableStatement callableStatement = null;
        ResultSet resultSet = null;

        try (Connection conn = ConexionOracle.getConnection()) {
            callableStatement = conn.prepareCall("{call ObtenerCategorias(?)}");

            callableStatement.registerOutParameter(1, OracleTypes.CURSOR);

            callableStatement.execute();

            resultSet = (ResultSet) callableStatement.getObject(1);

            modeloTabla.setRowCount(0);

            while (resultSet.next()) {
                modeloTabla.addRow(new Object[]{
                    resultSet.getInt("CategoriaID"),
                    resultSet.getString("Nombre"),
                    resultSet.getString("Descripcion")
                });
            }

            if (TablaCategorias.getModel() != modeloTabla) {
                TablaCategorias.setModel(modeloTabla);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this,
                    "Error al actualizar la tabla: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
                if (callableStatement != null) {
                    callableStatement.close();
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this,
                        "Error al cerrar los recursos: " + e.getMessage(),
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CategoriasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CategoriasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CategoriasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CategoriasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CategoriasFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaCategorias;
    private javax.swing.JButton btnAgregar1;
    private javax.swing.JButton btnBuscar1;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar1;
    private javax.swing.JButton btnObtenerCategorias;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txfCategoriaID1;
    private javax.swing.JTextField txfDescripcion1;
    private javax.swing.JTextField txfNombre1;
    // End of variables declaration//GEN-END:variables
}
