/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

/**
 *
 * @author andon
 */
import BD.ConexionOracle;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import oracle.jdbc.OracleTypes;
import oracle.jdbc.OracleCallableStatement;
import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class VistasBD extends javax.swing.JFrame {

    /**
     * Creates new form VistasBD
     *
     */
    private DefaultTableModel modeloTablaVistaProductos;
    private DefaultTableModel modeloTablaVistaInventarioDetalles;
    private DefaultTableModel modeloTablaVentasCliente;
    private DefaultTableModel modeloTablaVistaProveedoresProductos;
    private DefaultTableModel modeloTablaVistaComprasProveedor;
    private DefaultTableModel modeloTablaVistaCategoriasConteoProductos;
    private DefaultTableModel modeloTablaVistaHistoricoOrdenesCompra;
    private DefaultTableModel modeloTablaVistaEmpleadosDetalles;
    private DefaultTableModel modeloTablaVistaClientesDetalles;
    private DefaultTableModel modeloTablaVistaFacturaDetalles;

    public VistasBD() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        modeloTablaVistaProductos = (DefaultTableModel) TableVista_productos_categoria_proveedor.getModel();
        modeloTablaVistaInventarioDetalles = (DefaultTableModel) tableVistaInventarioDetalles.getModel();
        modeloTablaVentasCliente = (DefaultTableModel) TableVistaVentasCliente.getModel();
        modeloTablaVistaProveedoresProductos = (DefaultTableModel) TableVistaProveedoresProductos.getModel();
        modeloTablaVistaComprasProveedor = (DefaultTableModel) TableVistaComprasProveedor.getModel();
        modeloTablaVistaCategoriasConteoProductos = (DefaultTableModel) TableVistaCategoriasConteoProductos.getModel();
        modeloTablaVistaHistoricoOrdenesCompra = (DefaultTableModel) TableVistaHistoricoOrdenesCompra.getModel();
        modeloTablaVistaEmpleadosDetalles = (DefaultTableModel) TableVistaEmpleadosDetalles.getModel();
        modeloTablaVistaClientesDetalles = (DefaultTableModel) TableVistaClientesDetalles.getModel();
        modeloTablaVistaFacturaDetalles = (DefaultTableModel) TableVistaFacturaDetalles.getModel();

        loadTableData();
        loadInventarioTableData();
        loadTableDataVentasCliente();
        loadTableDataVistaProveedoresProductos();
        loadTableDataVistaComprasProveedor();
        loadTableDataVistaCategoriasConteoProductos();
        loadTableDataVistaHistoricoOrdenesCompra();
        loadTableDataVistaEmpleadosDetalles();
        loadTableDataVistaClientesDetalles();
        loadTableDataVistaFacturaDetalles();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableVista_productos_categoria_proveedor = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableVistaInventarioDetalles = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableVistaVentasCliente = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        TableVistaProveedoresProductos = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        TableVistaComprasProveedor = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        TableVistaCategoriasConteoProductos = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        TableVistaHistoricoOrdenesCompra = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        TableVistaEmpleadosDetalles = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        TableVistaClientesDetalles = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        TableVistaFacturaDetalles = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabs.setBackground(new java.awt.Color(153, 255, 255));
        tabs.setName("Vista1"); // NOI18N

        TableVista_productos_categoria_proveedor.setBackground(new java.awt.Color(255, 255, 204));
        TableVista_productos_categoria_proveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ProductoID", "ProductoNombre", "CategoriaNombre", "ProveedorNombre ", "Precio", "Stock "
            }
        ));
        TableVista_productos_categoria_proveedor.setGridColor(new java.awt.Color(153, 255, 255));
        jScrollPane1.setViewportView(TableVista_productos_categoria_proveedor);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );

        tabs.addTab("Vista1", jPanel1);

        tableVistaInventarioDetalles.setBackground(new java.awt.Color(255, 255, 204));
        tableVistaInventarioDetalles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "InventarioID", "EmpleadoNombre", "ProductoNombre", "Cantidad", "FechaActualizada"
            }
        ));
        jScrollPane2.setViewportView(tableVistaInventarioDetalles);

        tabs.addTab("Vista2", jScrollPane2);

        TableVistaVentasCliente.setBackground(new java.awt.Color(255, 255, 204));
        TableVistaVentasCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "VentaID", "VentaFecha", "ClienteNombre ", "VentaTotal"
            }
        ));
        jScrollPane3.setViewportView(TableVistaVentasCliente);

        tabs.addTab("Vista3", jScrollPane3);

        TableVistaProveedoresProductos.setBackground(new java.awt.Color(255, 255, 204));
        TableVistaProveedoresProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ProveedorID", "ProveedorNombre", "ProductoNombre"
            }
        ));
        jScrollPane4.setViewportView(TableVistaProveedoresProductos);

        tabs.addTab("Vista4", jScrollPane4);

        TableVistaComprasProveedor.setBackground(new java.awt.Color(255, 255, 204));
        TableVistaComprasProveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "OrdenCompraID", "CompraFecha", "ProveedorNombre", "Total", "Estado"
            }
        ));
        jScrollPane5.setViewportView(TableVistaComprasProveedor);

        tabs.addTab("Vista5", jScrollPane5);

        TableVistaCategoriasConteoProductos.setBackground(new java.awt.Color(255, 255, 204));
        TableVistaCategoriasConteoProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CategoriaID", "CategoriaNombre ", "NumeroProductos "
            }
        ));
        jScrollPane6.setViewportView(TableVistaCategoriasConteoProductos);

        tabs.addTab("Vista6", jScrollPane6);

        TableVistaHistoricoOrdenesCompra.setBackground(new java.awt.Color(255, 255, 204));
        TableVistaHistoricoOrdenesCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "HistoricoID", "OrdenFecha", "ProductoNombre", "Cantidad", "Estado"
            }
        ));
        jScrollPane7.setViewportView(TableVistaHistoricoOrdenesCompra);

        tabs.addTab("Vista7", jScrollPane7);

        TableVistaEmpleadosDetalles.setBackground(new java.awt.Color(255, 255, 204));
        TableVistaEmpleadosDetalles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "EmpleadoID ", "EmpleadoNombre ", "EmpleadoTelefono", "EmpleadoEmail ", "EmpleadoPosicion ", "EmpleadoSalario ", "FechaContratacion "
            }
        ));
        jScrollPane8.setViewportView(TableVistaEmpleadosDetalles);

        tabs.addTab("Vista8", jScrollPane8);

        TableVistaClientesDetalles.setBackground(new java.awt.Color(255, 255, 204));
        TableVistaClientesDetalles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "CedulaID", "ClienteNombre", "ClienteTelefono ", "ClienteDireccion ", "ClienteEmail"
            }
        ));
        jScrollPane9.setViewportView(TableVistaClientesDetalles);

        tabs.addTab("Vista9", jScrollPane9);

        TableVistaFacturaDetalles.setBackground(new java.awt.Color(255, 255, 204));
        TableVistaFacturaDetalles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "FacturaID", "VentaFecha", "ClienteNombre ", "ProductoNombre ", "Cantidad", "PrecioUnitario ", "PrecioTotal"
            }
        ));
        jScrollPane10.setViewportView(TableVistaFacturaDetalles);

        tabs.addTab("Vista10", jScrollPane10);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    private void loadTableDataVistaFacturaDetalles() {
        String query = "SELECT * FROM vista_factura_detalles";
        System.out.println("Ejecutando consulta: " + query); // Mensaje de depuración

        try (Connection conn = ConexionOracle.getConnection(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(query)) {

            // Limpiar datos anteriores
            modeloTablaVistaFacturaDetalles.setRowCount(0);

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("FacturaID"),
                    rs.getDate("VentaFecha"),
                    rs.getString("ClienteNombre"),
                    rs.getString("ProductoNombre"),
                    rs.getInt("Cantidad"),
                    rs.getDouble("PrecioUnitario"),
                    rs.getDouble("PrecioTotal")
                };
                modeloTablaVistaFacturaDetalles.addRow(row);
            }

            System.out.println("Datos cargados correctamente en vista factura detalles."); // Mensaje de depuración

        } catch (SQLException e) {
            System.out.println("Error SQL en vista factura detalles: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void loadTableDataVistaClientesDetalles() {
        String query = "SELECT * FROM vista_clientes_detalles";
        System.out.println("Ejecutando consulta: " + query); // Mensaje de depuración

        try (Connection conn = ConexionOracle.getConnection(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(query)) {

            // Limpiar datos anteriores
            modeloTablaVistaClientesDetalles.setRowCount(0);

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("CedulaID"),
                    rs.getString("ClienteNombre"),
                    rs.getString("ClienteTelefono"),
                    rs.getString("ClienteDireccion"),
                    rs.getString("ClienteEmail")
                };
                modeloTablaVistaClientesDetalles.addRow(row);
            }

            System.out.println("Datos cargados correctamente en vista clientes detalles."); // Mensaje de depuración

        } catch (SQLException e) {
            System.out.println("Error SQL en vista clientes detalles: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void loadTableDataVistaEmpleadosDetalles() {
        String query = "SELECT * FROM vista_empleados_detalles";
        System.out.println("Ejecutando consulta: " + query); // Mensaje de depuración

        try (Connection conn = ConexionOracle.getConnection(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(query)) {

            // Limpiar datos anteriores
            modeloTablaVistaEmpleadosDetalles.setRowCount(0);

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("EmpleadoID"),
                    rs.getString("EmpleadoNombre"),
                    rs.getString("EmpleadoTelefono"),
                    rs.getString("EmpleadoEmail"),
                    rs.getString("EmpleadoPosicion"),
                    rs.getDouble("EmpleadoSalario"),
                    rs.getDate("EmpleadoFechaContratacion")
                };
                modeloTablaVistaEmpleadosDetalles.addRow(row);
            }

            System.out.println("Datos cargados correctamente en vista empleados detalles."); // Mensaje de depuración

        } catch (SQLException e) {
            System.out.println("Error SQL en vista empleados detalles: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void loadTableDataVistaHistoricoOrdenesCompra() {
        String query = "SELECT * FROM vista_historico_ordenes_compra";
        System.out.println("Ejecutando consulta: " + query); // Mensaje de depuración

        try (Connection conn = ConexionOracle.getConnection(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(query)) {

            // Limpiar datos anteriores
            modeloTablaVistaHistoricoOrdenesCompra.setRowCount(0);

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("HistoricoID"),
                    rs.getDate("OrdenFecha"),
                    rs.getString("ProductoNombre"),
                    rs.getInt("Cantidad"),
                    rs.getString("Estado")
                };
                modeloTablaVistaHistoricoOrdenesCompra.addRow(row);
            }

            System.out.println("Datos cargados correctamente en vista histórico órdenes compra."); // Mensaje de depuración

        } catch (SQLException e) {
            System.out.println("Error SQL en vista histórico órdenes compra: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void loadTableDataVistaCategoriasConteoProductos() {
        String query = "SELECT * FROM vista_categorias_conteo_productos";
        System.out.println("Ejecutando consulta: " + query); // Mensaje de depuración

        try (Connection conn = ConexionOracle.getConnection(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(query)) {

            // Limpiar datos anteriores
            modeloTablaVistaCategoriasConteoProductos.setRowCount(0);

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("CategoriaID"),
                    rs.getString("CategoriaNombre"),
                    rs.getInt("NumeroProductos")
                };
                modeloTablaVistaCategoriasConteoProductos.addRow(row);
            }

            System.out.println("Datos cargados correctamente en vista categorías conteo productos."); // Mensaje de depuración

        } catch (SQLException e) {
            System.out.println("Error SQL en vista categorías conteo productos: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void loadTableDataVistaComprasProveedor() {
        String query = "SELECT * FROM vista_compras_proveedor";
        System.out.println("Ejecutando consulta: " + query); // Mensaje de depuración

        try (Connection conn = ConexionOracle.getConnection(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(query)) {

            // Limpiar datos anteriores
            modeloTablaVistaComprasProveedor.setRowCount(0);

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("OrdenCompraID"),
                    rs.getDate("CompraFecha"),
                    rs.getString("ProveedorNombre"),
                    rs.getDouble("Total"),
                    rs.getString("Estado")
                };
                modeloTablaVistaComprasProveedor.addRow(row);
            }

            System.out.println("Datos cargados correctamente en vista compras proveedor."); // Mensaje de depuración

        } catch (SQLException e) {
            System.out.println("Error SQL en vista compras proveedor: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void loadTableDataVistaProveedoresProductos() {
        String query = "SELECT * FROM vista_proveedores_productos";
        System.out.println("Ejecutando consulta: " + query); // Mensaje de depuración

        try (Connection conn = ConexionOracle.getConnection(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(query)) {

            // Limpiar datos anteriores
            modeloTablaVistaProveedoresProductos.setRowCount(0);

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("ProveedorID"),
                    rs.getString("ProveedorNombre"),
                    rs.getString("ProductoNombre")
                };
                modeloTablaVistaProveedoresProductos.addRow(row);
            }

            System.out.println("Datos cargados correctamente en vista proveedores productos."); // Mensaje de depuración

        } catch (SQLException e) {
            System.out.println("Error SQL en vista proveedores productos: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void loadTableDataVentasCliente() {
        String query = "SELECT * FROM vista_ventas_cliente";
        try (Connection conn = ConexionOracle.getConnection(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(query)) {
            modeloTablaVentasCliente.setRowCount(0);
            while (rs.next()) {
                Object[] row = {
                    rs.getInt("VentaID"),
                    rs.getDate("VentaFecha"),
                    rs.getString("ClienteNombre"),
                    rs.getDouble("VentaTotal")
                };
                modeloTablaVentasCliente.addRow(row);
            }
        } catch (SQLException e) {
            System.out.println("Error SQL: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void loadTableData() {
        String query = "SELECT * FROM vista_productos_categoria_proveedor";
        System.out.println("Ejecutando consulta: " + query);

        try (Connection conn = ConexionOracle.getConnection(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(query)) {

            modeloTablaVistaProductos.setRowCount(0);

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("ProductoID"),
                    rs.getString("ProductoNombre"),
                    rs.getString("CategoriaNombre"),
                    rs.getString("ProveedorNombre"),
                    rs.getDouble("Precio"),
                    rs.getInt("Slock")
                };
                modeloTablaVistaProductos.addRow(row);
            }

            System.out.println("Datos cargados correctamente.");

        } catch (SQLException e) {
            System.out.println("Error SQL: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void loadInventarioTableData() {
        String query = "SELECT * FROM vista_inventario_detalles";
        System.out.println("Ejecutando consulta: " + query);

        try (Connection conn = ConexionOracle.getConnection(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(query)) {

            modeloTablaVistaInventarioDetalles.setRowCount(0);

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("InventarioID"),
                    rs.getString("EmpleadoNombre"),
                    rs.getString("ProductoNombre"),
                    rs.getInt("Cantidad"),
                    rs.getDate("FechaActualizada")
                };
                modeloTablaVistaInventarioDetalles.addRow(row);
            }

            System.out.println("Datos cargados correctamente.");

        } catch (SQLException e) {
            System.out.println("Error SQL: " + e.getMessage());
            e.printStackTrace();
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistasBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistasBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistasBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistasBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistasBD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableVistaCategoriasConteoProductos;
    private javax.swing.JTable TableVistaClientesDetalles;
    private javax.swing.JTable TableVistaComprasProveedor;
    private javax.swing.JTable TableVistaEmpleadosDetalles;
    private javax.swing.JTable TableVistaFacturaDetalles;
    private javax.swing.JTable TableVistaHistoricoOrdenesCompra;
    private javax.swing.JTable TableVistaProveedoresProductos;
    private javax.swing.JTable TableVistaVentasCliente;
    private javax.swing.JTable TableVista_productos_categoria_proveedor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable tableVistaInventarioDetalles;
    private javax.swing.JTabbedPane tabs;
    // End of variables declaration//GEN-END:variables
}
